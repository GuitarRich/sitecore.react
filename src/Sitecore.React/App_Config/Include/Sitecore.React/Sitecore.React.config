<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
    <sitecore>
        <react type="Sitecore.React.Configuration.ReactSettings, Sitecore.React">
            <!--
              Sets the type of dynamic placeholders to use. 
              Valid options are:
                Predictable:  Uses the parent placeholder key and appends a numeric value.
                Guid:         (default) Uses the rendering UUID guid for the dynamic key.
      
              Using the Guid means that moving the placeholder around will bring child renderings
              with the placeholder. Using predictable placeholder names, can make it easier for
              content editors to know what they are using, but also makes it harder to move placeholders
              as any nested renderings will not get thier placeholder keys updated.
              -->
            <DynamicPlaceholderType>Guid</DynamicPlaceholderType>
            <!--
              The Url of the bundled javascript containing all the react components
              -->
            <BundleName>~/bundles/react</BundleName>
            <!--
              When true, the react components also get the JavaScript rendered on the client so that
              they are interactive on the page. When false, they are only rendered serverside.
              -->
            <EnableClientside>true</EnableClientside>
             
           <!--
              When true, the react components will have client side JS disabled to avoid errors in Experience Editor.
              If EnableClientside is false this setting is not needed.
              -->
            <DisableClientSideWhenEditing>true</DisableClientSideWhenEditing>

          <!--
              Sets when the bundling will happen:
              Valid options are:
                runtime:    The react components are generated and bundled on each page load. Each page will have a unique 
                            react bundle
                webpack:    The react components have already been compiled using webpack and uploaded to the filename
                            specified in /sitecore/react/WebPackServerScript
              -->
            <BundleType>webpack</BundleType>
            <!-- 
                Sets path to the pre-bundled server script when using the webpack bundle type. 
                See: https://reactjs.net/guides/webpack.html for more detail
            -->
            <ServerScript>~/server.min.js</ServerScript>
            <!-- 
                Sets path to the pre-bundled client script when using the webpack bundle type. 
                See: https://reactjs.net/guides/webpack.html for more detail
            -->
            <ClientScript>~/client.min.js</ClientScript>
            <!--
                When true, the un-minified react script is used. This is useful for debugging.
            -->
            <UseDebugReactScript>false</UseDebugReactScript>
        </react>
        <!--
            Uncomment this pipeline if you are using the RunTime bundling option
        -->
        <!--
        <pipelines>
            <mvc.getPageRendering>
                <processor
                  patch:before="*[@type='Sitecore.Mvc.Pipelines.Response.GetPageRendering.GetLayoutRendering, Sitecore.Mvc']"
                  type="Sitecore.React.Pipelines.GetPageRendering.AddJsxFiles, Sitecore.React">
                    <defaultAssets hint="raw:AddAsset">
                    </defaultAssets>
                </processor>
            </mvc.getPageRendering>
        </pipelines>
        -->
    </sitecore>
</configuration>